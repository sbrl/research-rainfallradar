"use strict";

/**
 * Given a 2D array, makes a new 2D array according to the given threshold
 * Apparently making this a mutator makes it slower - despite the theorised decreased load on the garbage collector
 * 
 * @param	{number[][]}		array	The 2D array to process.
 * @param	{{min:Number,max:Number}[]}	bounds	An array of objects, generated by bounds2classes().
 * @return	{number[][]}	The generated 2D array.
 */
export default function array2d_classify_convert_bin(arr, threshold) {
	if(typeof threshold != "number")
		throw new Error("Error: Invalid threshold value.");
	
	let result = [];
	for(let i = 0; i < arr.length; i++) {
		result[i] = [];
		for(let j = 0; j < arr[i].length; j++) {
			result[i][j] = arr[i][j] >= threshold ? 1 : 0;
		}
	}
	return result;
}
